// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Full Version"

// DATE "08/26/2021 18:51:58"

// 
// Device: Altera EP4CE10F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module saler (
	coin_in,
	rst,
	clk,
	state,
	sig_out);
input 	coin_in;
input 	rst;
input 	clk;
output 	[2:0] state;
output 	sig_out;

// Design Ports Information
// state[0]	=>  Location: PIN_P6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// state[1]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// state[2]	=>  Location: PIN_N5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sig_out	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// coin_in	=>  Location: PIN_T5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// rst	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("saler_8_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \state[0]~output_o ;
wire \state[1]~output_o ;
wire \state[2]~output_o ;
wire \sig_out~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \coin_in~input_o ;
wire \Selector0~0_combout ;
wire \rst~input_o ;
wire \rst~inputclkctrl_outclk ;
wire \state[2]~reg0_q ;
wire \Selector1~0_combout ;
wire \state[1]~reg0_q ;
wire \Selector2~0_combout ;
wire \state[0]~reg0_q ;
wire \Equal3~0_combout ;
wire \sig_out~reg0_q ;


// Location: IOOBUF_X7_Y0_N2
cycloneive_io_obuf \state[0]~output (
	.i(\state[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[0]~output .bus_hold = "false";
defparam \state[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N9
cycloneive_io_obuf \state[1]~output (
	.i(\state[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[1]~output .bus_hold = "false";
defparam \state[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N23
cycloneive_io_obuf \state[2]~output (
	.i(\state[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[2]~output .bus_hold = "false";
defparam \state[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N16
cycloneive_io_obuf \sig_out~output (
	.i(\sig_out~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sig_out~output_o ),
	.obar());
// synopsys translate_off
defparam \sig_out~output .bus_hold = "false";
defparam \sig_out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X9_Y0_N1
cycloneive_io_ibuf \coin_in~input (
	.i(coin_in),
	.ibar(gnd),
	.o(\coin_in~input_o ));
// synopsys translate_off
defparam \coin_in~input .bus_hold = "false";
defparam \coin_in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N16
cycloneive_lcell_comb \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = (\coin_in~input_o  & (!\state[0]~reg0_q  & (!\state[2]~reg0_q  & \state[1]~reg0_q )))

	.dataa(\coin_in~input_o ),
	.datab(\state[0]~reg0_q ),
	.datac(\state[2]~reg0_q ),
	.datad(\state[1]~reg0_q ),
	.cin(gnd),
	.combout(\Selector0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector0~0 .lut_mask = 16'h0200;
defparam \Selector0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \rst~input (
	.i(rst),
	.ibar(gnd),
	.o(\rst~input_o ));
// synopsys translate_off
defparam \rst~input .bus_hold = "false";
defparam \rst~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \rst~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\rst~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\rst~inputclkctrl_outclk ));
// synopsys translate_off
defparam \rst~inputclkctrl .clock_type = "global clock";
defparam \rst~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X8_Y1_N17
dffeas \state[2]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Selector0~0_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \state[2]~reg0 .is_wysiwyg = "true";
defparam \state[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N6
cycloneive_lcell_comb \Selector1~0 (
// Equation(s):
// \Selector1~0_combout  = (!\state[2]~reg0_q  & ((\coin_in~input_o  & (\state[0]~reg0_q  & !\state[1]~reg0_q )) # (!\coin_in~input_o  & (!\state[0]~reg0_q  & \state[1]~reg0_q ))))

	.dataa(\coin_in~input_o ),
	.datab(\state[0]~reg0_q ),
	.datac(\state[1]~reg0_q ),
	.datad(\state[2]~reg0_q ),
	.cin(gnd),
	.combout(\Selector1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector1~0 .lut_mask = 16'h0018;
defparam \Selector1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X8_Y1_N7
dffeas \state[1]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Selector1~0_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \state[1]~reg0 .is_wysiwyg = "true";
defparam \state[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N20
cycloneive_lcell_comb \Selector2~0 (
// Equation(s):
// \Selector2~0_combout  = (!\state[1]~reg0_q  & ((\coin_in~input_o  & (!\state[0]~reg0_q )) # (!\coin_in~input_o  & (\state[0]~reg0_q  & !\state[2]~reg0_q ))))

	.dataa(\state[1]~reg0_q ),
	.datab(\coin_in~input_o ),
	.datac(\state[0]~reg0_q ),
	.datad(\state[2]~reg0_q ),
	.cin(gnd),
	.combout(\Selector2~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector2~0 .lut_mask = 16'h0414;
defparam \Selector2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X8_Y1_N21
dffeas \state[0]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Selector2~0_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \state[0]~reg0 .is_wysiwyg = "true";
defparam \state[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N30
cycloneive_lcell_comb \Equal3~0 (
// Equation(s):
// \Equal3~0_combout  = (!\state[1]~reg0_q  & (\state[2]~reg0_q  & !\state[0]~reg0_q ))

	.dataa(\state[1]~reg0_q ),
	.datab(\state[2]~reg0_q ),
	.datac(gnd),
	.datad(\state[0]~reg0_q ),
	.cin(gnd),
	.combout(\Equal3~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal3~0 .lut_mask = 16'h0044;
defparam \Equal3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X8_Y1_N31
dffeas \sig_out~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Equal3~0_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sig_out~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \sig_out~reg0 .is_wysiwyg = "true";
defparam \sig_out~reg0 .power_up = "low";
// synopsys translate_on

assign state[0] = \state[0]~output_o ;

assign state[1] = \state[1]~output_o ;

assign state[2] = \state[2]~output_o ;

assign sig_out = \sig_out~output_o ;

endmodule
